diff --git a/chrome/browser/extensions/chrome_extensions_browser_client.cc b/chrome/browser/extensions/chrome_extensions_browser_client.cc
index 87a8ac4f1635d0f11067da7644987a2cff16aa06..3cbf2ed4e6879a7d51eb05d3683bb83d6de3aa36 100644
--- a/chrome/browser/extensions/chrome_extensions_browser_client.cc
+++ b/chrome/browser/extensions/chrome_extensions_browser_client.cc
@@ -9,6 +9,8 @@
 #include "base/command_line.h"
 #include "base/logging.h"
 #include "base/version.h"
+#include "brave/browser/extensions/brave_component_extension_resource_manager.h"
+#include "brave/browser/extensions/brave_extensions_browser_api_provider.h"
 #include "build/build_config.h"
 #include "chrome/browser/app_mode/app_mode_utils.h"
 #include "chrome/browser/browser_process.h"
@@ -91,11 +93,12 @@ bool ExtensionsDisabled(const base::CommandLine& command_line) {
 ChromeExtensionsBrowserClient::ChromeExtensionsBrowserClient() {
   AddAPIProvider(std::make_unique<CoreExtensionsBrowserAPIProvider>());
   AddAPIProvider(std::make_unique<ChromeExtensionsBrowserAPIProvider>());
+  AddAPIProvider(std::make_unique<BraveExtensionsBrowserAPIProvider>());
 
   process_manager_delegate_.reset(new ChromeProcessManagerDelegate);
   api_client_.reset(new ChromeExtensionsAPIClient);
   SetCurrentChannel(chrome::GetChannel());
-  resource_manager_.reset(new ChromeComponentExtensionResourceManager());
+  resource_manager_.reset(new BraveComponentExtensionResourceManager());
 }
 
 ChromeExtensionsBrowserClient::~ChromeExtensionsBrowserClient() {}
@@ -152,6 +155,12 @@ content::BrowserContext* ChromeExtensionsBrowserClient::GetOffTheRecordContext(
 content::BrowserContext* ChromeExtensionsBrowserClient::GetOriginalContext(
     content::BrowserContext* context) {
   DCHECK(context);
+  if (context->IsTorProfile()) {
+    LOG(ERROR) << __FUNCTION__ << "Tapping for ChromeExtensionsBrowserClient::GetOriginalContext";
+    ProfileManager* profile_manager = g_browser_process->profile_manager();
+    base::FilePath original_profile_path = Profile::FromBrowserContext(context)->GetPath().DirName().DirName();
+    return profile_manager->GetProfileByPath(original_profile_path);
+  }
   return static_cast<Profile*>(context)->GetOriginalProfile();
 }
 
