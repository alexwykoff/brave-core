diff --git a/chrome/installer/mac/signing/signing.py b/chrome/installer/mac/signing/signing.py
index 9a425e757229484755a2f656f8a7758c7538b676..1261deecbdd4b5671901fa180e28684fbcd49262 100644
--- a/chrome/installer/mac/signing/signing.py
+++ b/chrome/installer/mac/signing/signing.py
@@ -119,9 +119,17 @@ def get_parts(config):
                 'app_mode_loader',
                 options=full_hardened_runtime_options,
                 verify_options=VerifyOptions.IGNORE_RESOURCES),
+        'sparkle-framework':
+            CodeSignedProduct(
+                '{.framework_dir}/Frameworks/Sparkle.framework'
+                .format(config),
+                'org.sparkle-project.Sparkle',
+                verify_options=VerifyOptions.DEEP + VerifyOptions.NO_STRICT),
     }
 
     dylibs = (
+        'libchallenge_bypass_ristretto.dylib',
+        'libadblock.dylib',
         'libEGL.dylib',
         'libGLESv2.dylib',
         'libswiftshader_libEGL.dylib',
@@ -180,7 +188,7 @@ def sign_part(paths, config, part):
         part: The |model.CodeSignedProduct| to sign. The product's |path| must
             be in |paths.work|.
     """
-    command = ['codesign', '--sign', config.identity]
+    command = ['codesign', '--force', '--sign', config.identity]
     if config.notary_user:
         # Assume if the config has notary authentication information that the
         # products will be notarized, which requires a secure timestamp.
@@ -274,6 +282,9 @@ def sign_chrome(paths, config, sign_framework=False):
 
         # Sign the framework bundle.
         sign_part(paths, config, parts['framework'])
+        from signing_helper import GenerateWidevineSigFile
+        GenerateWidevineSigFile(paths, config, parts['framework'])
+        sign_part(paths, config, parts['framework'])
 
     provisioning_profile_basename = config.provisioning_profile_basename
     if provisioning_profile_basename:
