diff --git a/chrome/browser/extensions/extension_service.cc b/chrome/browser/extensions/extension_service.cc
index 38d9a21248aae8e1069a3c52fd1cecbe628faa8b..2bbfe0e3aef86f6d043baa62d37f13eaade1b8e3 100644
--- a/chrome/browser/extensions/extension_service.cc
+++ b/chrome/browser/extensions/extension_service.cc
@@ -60,6 +60,7 @@
 #include "chrome/browser/extensions/updater/extension_updater.h"
 #include "chrome/browser/google/google_brand.h"
 #include "chrome/browser/profiles/profile.h"
+#include "chrome/browser/profiles/profile_manager.h"
 #include "chrome/browser/ui/webui/extensions/extension_icon_source.h"
 #include "chrome/browser/ui/webui/favicon_source.h"
 #include "chrome/browser/ui/webui/theme_source.h"
@@ -750,12 +751,29 @@ bool ExtensionService::IsExtensionEnabled(
 void ExtensionService::EnableExtension(const std::string& extension_id) {
   CHECK(BrowserThread::CurrentlyOn(BrowserThread::UI));
   extension_registrar_.EnableExtension(extension_id);
+  if (profile_->IsTorProfile()) return;
+  ProfileManager* profile_manager = g_browser_process->profile_manager();
+  base::FilePath tor_path =
+    profile_->GetPath().Append("session_profiles").Append("Tor Profile");
+  Profile* tor_profile = profile_manager->GetProfileByPath(tor_path);
+  if (!tor_profile) return;
+  ExtensionSystem::Get(tor_profile)->extension_service()->EnableExtension(
+      extension_id);
+
 }
 
 void ExtensionService::DisableExtension(const std::string& extension_id,
                                         int disable_reasons) {
   CHECK(BrowserThread::CurrentlyOn(BrowserThread::UI));
   extension_registrar_.DisableExtension(extension_id, disable_reasons);
+  if (profile_->IsTorProfile()) return;
+  ProfileManager* profile_manager = g_browser_process->profile_manager();
+  base::FilePath tor_path =
+    profile_->GetPath().Append("session_profiles").Append("Tor Profile");
+  Profile* tor_profile = profile_manager->GetProfileByPath(tor_path);
+  if (!tor_profile) return;
+  ExtensionSystem::Get(tor_profile)->extension_service()->DisableExtension(
+      extension_id, disable_reasons);
 }
 
 void ExtensionService::DisableExtensionWithSource(
@@ -775,6 +793,14 @@ void ExtensionService::DisableExtensionWithSource(
   CHECK(system_->management_policy()->ExtensionMayModifySettings(
       source_extension, extension, nullptr));
   extension_registrar_.DisableExtension(extension_id, disable_reasons);
+  if (profile_->IsTorProfile()) return;
+  ProfileManager* profile_manager = g_browser_process->profile_manager();
+  base::FilePath tor_path =
+    profile_->GetPath().Append("session_profiles").Append("Tor Profile");
+  Profile* tor_profile = profile_manager->GetProfileByPath(tor_path);
+  if (!tor_profile) return;
+  ExtensionSystem::Get(tor_profile)->extension_service()->DisableExtensionWithSource(
+      source_extension, extension_id, disable_reasons);
 }
 
 void ExtensionService::DisableUserExtensionsExcept(
